/*!
 * @brief This code implements the Intervalos programming problem
 * @author selan
 * @data June, 6th 2021
 */

#include <iostream>

/// This class represents a XY aligned rectangle.
struct Rect{
    float x, y; //!< Coordinates of the origin -> Bottom-left corner.
    float w;    //!< Width
    float h;    //!< Height
    //Ctro.
    Rect(float x_=0, float y_=0, float w_=0, float h_=0)
        : x{x_}, y{y_}, w{w_}, h{h_}
    {/*empty*/}
};

/// Returns true if thereis a intersection between the two rectangles passed as arguments.
bool has_intersection(const Rect& R, const Rect& S){
    // TODO
    return false;
}

/// Returns a rectangle correspoding to the intersection between the two rectangles passed arguments.
/*! If there is no intersectio, the function returns a "empty" rectangle (with negative dimensions).
 *  @param R the first rectangle
 *  @param S the second rectangle
 *  @return The rectangle generated by the intersection between R and S, if there is one.
 */
Rect intersect(const Rect& R, const Rect& S) {
    // TODO
    return Rect{};
}


int main(void){
    // TODO
    return 0;
}
